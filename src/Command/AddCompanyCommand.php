<?php

namespace App\Command;

use App\Database\DatabaseAdapter;
use App\Validator\EmailValidator;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

class AddCompanyCommand extends Command
{
    protected function configure()
    {
        $this->setName('company:add')
            ->setDescription('Add new company')
            ->addOption('id', null, InputOption::VALUE_REQUIRED, 'Company ID (autogenerated if not set)')
            ->addArgument('name', InputArgument::REQUIRED, 'Company Name')
            ->addArgument('registration_code', InputArgument::REQUIRED, 'Company Registration Code')
            ->addArgument('email', InputArgument::REQUIRED, 'Company Email address')
            ->addArgument('phone', InputArgument::REQUIRED, 'Company Phone Number')
            ->addArgument('comment', InputArgument::OPTIONAL, 'Additional Comment');
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $db = new DatabaseAdapter();
        $name = $input->getArgument('name');
        $email = $input->getArgument('email');

        // Validate email.
        if (!(new EmailValidator())->isValid($email)) {
            $output->writeln('<error>Invalid email: ' . $email . '</error>');

            return 1;
        }

        $db->executeQuery(
            'insert into companies (id, name, registration_code, email, phone, comment)
values (?, ?, ?, ?, ?, ?)',
            [
                $input->getOption('id'),
                $name,
                $input->getArgument('registration_code'),
                $email,
                $input->getArgument('phone'),
                $input->getArgument('comment')
            ]
        );
        $output->writeln('Company <info>' . $name . '</info> added with ID <info>' . $db->lastInsertId() . '</info>.');
    }
}
